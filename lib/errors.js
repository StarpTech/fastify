'use strict'

const codes = {
  FST_ERR_REQUEST_VALIDATION: 'FST_ERR_REQUEST_VALIDATION',
  FST_ERR_PAYLOAD_STREAM: 'FST_ERR_REQUEST_STREAM',
  FST_ERR_RESPONSE_STREAM: 'FST_ERR_RESPONSE_STREAM',
  FST_ERR_HTTP: 'FST_ERR_HTTP', // for errors which are already good described by statusCode
  FST_ERR_HTTP_CONTENT_LENGTH: 'FST_ERR_HTTP_CONTENT_LENGTH',
  FST_ERR_CUSTOM_ERR_HANDLER_REJECTION: 'FST_ERR_CUSTOM_ERR_HANDLER_REJECTION',
  FST_ERR_HANDLER_REJECTION: 'FST_ERR_HANDLER_REJECTION',
  FST_ERR_RAW_CONTENT_TYPE_REJECTION: 'FST_ERR_RAW_CONTENT_TYPE_REJECTION',
  FST_ERR_CONTENT_TYPE_REJECTION: 'FST_ERR_CONTENT_TYPE_REJECTION',
  FST_ERR_CONTENT_TYPE: 'FST_ERR_CONTENT_TYPE',
  FST_ERR_DEFAULT_TYPE_PARSER: 'FST_ERR_DEFAULT_TYPE_PARSER',
  FST_ERR_ON_RESPONSE_HOOK: 'FST_ERR_ON_RESPONSE_HOOK',
  FST_ERR_PRE_HANDLER_HOOK: 'FST_ERR_PRE_HANDLER_HOOK',
  FST_ERR_ON_REQUEST_HOOK: 'FST_ERR_ON_REQUEST_HOOK',
  FST_ERR_RUN_MIDDLEWARE: 'FST_ERR_RUN_MIDDLEWARE'
}

function annotateErrorWithCode (err, code) {
  if (err instanceof Error) {
    err.code = code
  }
  return err
}

module.exports = { codes, annotateErrorWithCode }
